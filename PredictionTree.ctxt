#BlueJ class context
comment0.params=
comment0.target=PredictionTree()
comment0.text=\r\n\ constructor\ creates\ a\ single\ root\ node\r\n\ with\ its\ char\ set\ to\ null\r\n
comment1.params=word
comment1.target=void\ insertWord(java.lang.String)
comment1.text=\r\n\ Insert\ a\ new\ word\ into\ the\ '26-ary'\ tree\r\n\ \r\n\ @param\ word\ the\ word\ to\ be\ inserted\ into\ the\ tree\r\n
comment2.params=word
comment2.target=boolean\ hasWord(java.lang.String)
comment3.params=root
comment3.target=void\ printTree(WordTree.PredictionTree.Node)
comment4.params=prefix
comment4.target=java.lang.String[]\ predictText(java.lang.String)
comment4.text=\r\n\ finds\ words\ based\ on\ the\ prefix\ supplied\r\n\ \r\n\ @param\ prefix\ prefix\ used\ as\ a\ basis\ for\ the\ search\r\n\ @return\ an\ array\ of\ up\ to\ 10\ words\ that\ start\ with\ the\ supplied\ prefix\r\n
comment5.params=prefix
comment5.target=WordTree.PredictionTree.Node\ traverseToEndOfPrefix(java.lang.String)
comment5.text=\r\n\ traverses\ through\ the\ tree\ until\ the\ node\ that\ represents\ the\ letter\r\n\ at\ the\ end\ of\ the\ prefix\ is\ reached\r\n\ @param\ prefix\ prefix\ guide\ to\ desired\ node\r\n\ @return\ node\ corresponding\ to\ the\ last\ letter\ in\ prefix\r\n
comment6.params=root\ prefix\ wordList
comment6.target=java.util.ArrayList\ getWords(WordTree.PredictionTree.Node,\ java.lang.String,\ java.util.ArrayList)
comment6.text=\r\n\ gets\ a\ list\ of\ 10\ words\ that\ have\ <em>prefix</em>\ as\ a\ prefix\r\n\ @param\ root\ current\ node\r\n\ @param\ prefix\ current\ prefix\r\n\ @param\ wordList\ list\ of\ words\ that\ share\ the\ originating\ prefix\r\n\ @return\ an\ Arraylist\ of\ words\ that\ start\ with\ prefix\r\n
numComments=7
