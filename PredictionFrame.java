/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
 

/**
 * User interface to allow user to type text into a text box
 * - provides a text are for results
 * @author Jason Isaacs
 */
public class PredictionFrame extends javax.swing.JFrame {

    /**
     * Creates new form PredictionFrame
     */
    String dictionaryPath;
    String[] wordset;
    PredictionTree dictionaryTree;
    
    public PredictionFrame() {
        dictionaryPath = "words.txt"; 
        dictionaryTree = TreeBuilder.buildDictionaryTree(dictionaryPath);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EnterWordTextField = new javax.swing.JTextField();
        enterWordLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        predictionTextArea = new javax.swing.JTextArea();
        predictionLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        EnterWordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterWordTextFieldActionPerformed(evt);
            }
        });
        EnterWordTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EnterWordTextFieldKeyReleased(evt);
            }
        });

        enterWordLabel.setText("Enter a Word:");

        predictionTextArea.setColumns(20);
        predictionTextArea.setRows(5);
        jScrollPane1.setViewportView(predictionTextArea);

        predictionLabel.setText("Text Prediction:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(predictionLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(enterWordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(EnterWordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(185, 185, 185))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EnterWordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterWordLabel))
                .addGap(35, 35, 35)
                .addComponent(predictionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EnterWordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterWordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EnterWordTextFieldActionPerformed

    private void EnterWordTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EnterWordTextFieldKeyReleased
        predictionTextArea.setText("");
        wordset = new String[10];
        wordset = dictionaryTree.predictText(EnterWordTextField.getText());
        for (String word : wordset) {
            predictionTextArea.append(word);
            predictionTextArea.append(System.lineSeparator());
        }
    }//GEN-LAST:event_EnterWordTextFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PredictionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PredictionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PredictionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PredictionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PredictionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EnterWordTextField;
    private javax.swing.JLabel enterWordLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel predictionLabel;
    private javax.swing.JTextArea predictionTextArea;
    // End of variables declaration//GEN-END:variables
}
